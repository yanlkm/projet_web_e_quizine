1 - Ecrire une fonction qui retourne la liste de tous les joueurs ayant participé à un
match particulier dont on connaît l’identifiant.

DELIMITER //
create function joueurmatch(idmatch INT) RETURNS CHAR(100) begin 
	declare retour char(100) default "";
    set retour := ( select GROUP_CONCAT(jou_pseudo) from T_joueur_jou where mat_id=idmatch);
   return retour;
    

   END;
// DELIMITER ;
2- Testez cette fonction
select joueurmatch(1234);

3- Ecrire alors une procédure qui insère une actualité à la date d’aujourd’hui
connaissant l’identifiant d’un match et en précisant l’intitulé du match, sa date de
début et de fin et bien sûr la liste des joueurs ayant participé. Une actualité dont
l’auteur de l’actualité sera l’administrateur principal (« responsable ») sera ajoutée
si le match choisi est fini.

 DELIMITER //
CREATE PROCEDURE actu(IN IDMATCH INT) begin  
	select mat_intitule into @intmatch from T_match_mat where mat_id=IDMATCH;
	select mat_datefin into @finmatch from T_match_mat where mat_id=IDMATCH;
	select mat_datedebut into @debutmatch from T_match_mat where mat_id=IDMATCH;
	select joueurmatch(idmatch) into @liste ;
    select (GROUP_CONCAT(@debutmatch,@finmatch,@liste)) into @chaine;
    
	if (@finmatch is not null) then
	INSERT INTO T_actualite_act values (NULL,@intmatch,@chaine,'rien',CURDATE(),3);
	end if;
    END
// 
DELIMITER ;

3- Testez cette procédure

call actu(1234); //insere dans le tableau des actualités une ligne avec les informations demandées 
call actu(123311); // n'insere rien car le match n'est pas encore terminé

4- Puis, en réutilisant ce qui a été fait précédemment, créez un déclencheur (trigger)
ajoutant une actualité dès la fin d’un match.

DELIMITER //
CREATE TRIGGER trouver
AFTER UPDATE ON T_match_mat
for each row
BEGIN
	set @truc:=(select mat_id from T_match_mat where mat_datefin in (select max(mat_datefin) from T_match_mat));
	select mat_intitule into @intmatch from T_match_mat where mat_id=@truc;
	select mat_datefin into @finmatch from T_match_mat where mat_id=@truc;
	select mat_datedebut into @debutmatch from T_match_mat where mat_id=@truc;
	select joueurmatch(@truc) into @liste ;
    select (GROUP_CONCAT(@debutmatch,@finmatch,@liste)) into @chaine;
	INSERT INTO T_actualite_act values (NULL,@intmatch,@chaine,'rien',CURDATE(),4);
END;
//
DELIMITER ;
5 - Activativez ce trigger 
UPDATE T_match_mat set mat_datefin=CURDATE() where mat_id=1234;

// le trigger lance la requete d'insertion dans la table T_actualite_act


ACTIVITE 3 :

1- Ecrivez une procédure qui renvoie en sortie le nombre de matchs déjà finis / en
cours / à venir.


DELIMITER // 
CREATE PROCEDURE renvoi(IN nb CHAR(100)) 
BEGIN
if (nb='encours') then
select count(mat_id) from T_match_mat where mat_datefin is null;
end if;
if(nb='a venir') then
select count(mat_id) from T_match_mat where mat_datedebut > CURDATE();
end if;
if (nb='fini')  then
select count(mat_id) from T_match_mat where mat_datefin is not null;
end if;
end
// 
DELIMITER ;

2- Testez cette procédure.

call renvoi('encours');
call renvoi('a venir');
call renvoi('fini');